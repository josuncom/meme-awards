[{"C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\index.js":"1","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\App.js":"2","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Main.js":"3","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Home.js":"4","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\Firebase.js":"5","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Clock.js":"6","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Vote.js":"7","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Top2.js":"8","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Link.js":"9","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Footer.js":"10","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\data\\data.js":"11","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Clock2.js":"12","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Winner.js":"13","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\LastAwardsVideo.js":"14","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\data\\ShareAPI.js":"15"},{"size":187,"mtime":1670573929854,"results":"16","hashOfConfig":"17"},{"size":234,"mtime":1669268396719,"results":"18","hashOfConfig":"17"},{"size":3263,"mtime":1670576308759,"results":"19","hashOfConfig":"17"},{"size":7176,"mtime":1670579605351,"results":"20","hashOfConfig":"17"},{"size":775,"mtime":1670569737843,"results":"21","hashOfConfig":"17"},{"size":4623,"mtime":1670562529984,"results":"22","hashOfConfig":"17"},{"size":11878,"mtime":1670575032635,"results":"23","hashOfConfig":"17"},{"size":3054,"mtime":1670497543825,"results":"24","hashOfConfig":"17"},{"size":4126,"mtime":1670578948770,"results":"25","hashOfConfig":"17"},{"size":1012,"mtime":1670561941861,"results":"26","hashOfConfig":"17"},{"size":3193,"mtime":1670579600235,"results":"27","hashOfConfig":"17"},{"size":3606,"mtime":1670578089910,"results":"28","hashOfConfig":"17"},{"size":3133,"mtime":1670497618111,"results":"29","hashOfConfig":"17"},{"size":1179,"mtime":1670561813946,"results":"30","hashOfConfig":"17"},{"size":1260,"mtime":1670577580445,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"1x6nlup",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\index.js",["89"],[],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport Firebase from \"./Firebase\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\App.js",[],[],[],"C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Main.js",["90","91","92","93"],[],"import React, { useEffect } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"../css/Main.css\";\r\nimport { DEADLINE, LIVEDAY } from \"../data/data\";\r\nimport { KakaoShare, shareTwitter } from \"../data/ShareAPI\";\r\nimport Kakao from \"../image/kakao.png\";\r\nimport Share from \"../image/share.png\";\r\nimport Twitter from \"../image/twitter.png\";\r\nimport Clock from \"./Clock\";\r\nimport Clock2 from \"./Clock2\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport LastAwards from \"./LastAwardsVideo\";\r\nimport Link from \"./Link\";\r\nimport Top2 from \"./Top2\";\r\nimport Vote from \"./Vote\";\r\nimport Winner from \"./Winner\";\r\n\r\nexport default function Main() {\r\n  const { pathname } = useLocation();\r\n\r\n  const currentTime = new Date();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      <CopyText\r\n        defaultValue=\"https://www.banggooso.com/ms/meme-awards/2022/\"\r\n        id=\"copy\"\r\n        data-clipboard-text=\"https://www.banggooso.com/ms/meme-awards/2022/\"\r\n      />\r\n      <Home />\r\n      {currentTime < DEADLINE ? <Top2 /> : <></>}\r\n      {/* 실시간 1,2등은 투표 마감 전까지만 나오도록 */}\r\n\r\n      {currentTime < LIVEDAY ? <LastAwards /> : <></>}\r\n      {/* 임베드 영상은 라이브 시상식 전까지만 나오도록 */}\r\n\r\n      {currentTime < DEADLINE ? (\r\n        <Clock />\r\n      ) : currentTime > LIVEDAY ? (\r\n        <Clock2 />\r\n      ) : (\r\n        <Winner />\r\n      )}\r\n      {/* 투표 마감 전까지만 Clock, 마감되면 Clock2 랜더링 */}\r\n      {/* Clock2도 (1.투표 마감 - 라이브 / 2.라이브 이후) 로 분기 나눌 것*/}\r\n\r\n      <Vote />\r\n      <Link />\r\n\r\n      <Footer />\r\n      <div className=\"adminActions\">\r\n        <input type=\"checkbox\" name=\"adminToggle\" className=\"adminToggle\" />\r\n        <a className=\"share-button\">\r\n          <ShareImage src={Share} />\r\n        </a>\r\n        <div className=\"adminButtons\">\r\n          <CopyToClipboard\r\n            text=\"https://www.banggooso.com/ms/meme-awards/2022/\"\r\n            onCopy={() => {\r\n              alert(\"링크를 복사했습니다!\");\r\n            }}\r\n          >\r\n            <a\r\n              className=\"copy-btn\"\r\n              data-clipboard-target=\"#copy\"\r\n              data-clipboard-action=\"copy\"\r\n            >\r\n              URL\r\n            </a>\r\n          </CopyToClipboard>\r\n          <a\r\n            onClick={() =>\r\n              shareTwitter(\"https://www.banggooso.com/ms/meme-awards/2022/\")\r\n            }\r\n          >\r\n            <ShareImage src={Twitter} />\r\n          </a>\r\n          <a\r\n            id=\"kakao-button\"\r\n            onClick={() =>\r\n              KakaoShare(\r\n                \"https://www.banggooso.com/ms/meme-awards/2022/\",\r\n                \"2022 밈어워즈\"\r\n              )\r\n            }\r\n          >\r\n            <ShareImage src={Kakao} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ShareImage = styled.img`\r\n  width: 3rem;\r\n  margin: 1.5rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 2rem;\r\n    margin: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst CopyText = styled.input`\r\n  display: none;\r\n`;\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Home.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],[],"import React from \"react\";\r\nimport \"../css/Home.css\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Banner from \"../image/main.jpg\";\r\nimport slideIcon1 from \"../image/icon-1.svg\";\r\nimport slideIcon2 from \"../image/icon-2.svg\";\r\nimport slideIcon3 from \"../image/icon-3.svg\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function Home() {\r\n  useEffect(() => {\r\n    if (window.Kakao) {\r\n      const kakao = window.Kakao;\r\n      kakao.init(process.env.REACT_APP_SHARE_KAKAO_LINK_KEY);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <BannerImg src={Banner} />\r\n      <div className=\"HomeContainer HomeContainerScrolled\">\r\n        <div className=\"slider\">\r\n          <div className=\"slider-track\">\r\n            <div>\r\n              <div className=\"slide\">우 to the 영 to the 우!</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon1} />\r\n              </div>\r\n              <div className=\"slide\">너 혹시 뭐 돼?</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon2} />\r\n              </div>\r\n              <div className=\"slide\">킹받드라슈</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon3} />\r\n              </div>\r\n              <div className=\"slide\">내일 봬요 누나</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon1} />\r\n              </div>\r\n              <div className=\"slide\">재즈가 뭐라고 생각하세요?</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon2} />\r\n              </div>\r\n              <div className=\"slide\">저는 ?? 아티스트예요.</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon3} />\r\n              </div>\r\n              <div className=\"slide\">너 납치된 거야</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon1} />\r\n              </div>\r\n              <div className=\"slide\">내 장점이 뭔지 알아?</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon2} />\r\n              </div>\r\n              <div className=\"slide\">ㄴ겠냐</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon3} />\r\n              </div>\r\n              <div className=\"slide\">어이, 강프로 식사는 잡쉈어?</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon1} />\r\n              </div>\r\n              <div className=\"slide\">하남자 특)</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon2} />\r\n              </div>\r\n              <div className=\"slide\">그 잡채</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon3} />\r\n              </div>\r\n              <div className=\"slide\">우 to the 영 to the 우!</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon1} />\r\n              </div>\r\n              <div className=\"slide\">너 혹시 뭐 돼?</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon2} />\r\n              </div>\r\n              <div className=\"slide\">킹받드라슈</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon3} />\r\n              </div>\r\n              <div className=\"slide\">내일 봬요 누나</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon1} />\r\n              </div>\r\n              <div className=\"slide\">재즈가 뭐라고 생각하세요?</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon2} />\r\n              </div>\r\n              <div className=\"slide\">저는 ?? 아티스트예요.</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon3} />\r\n              </div>\r\n              <div className=\"slide\">너 납치된 거야</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon1} />\r\n              </div>\r\n              <div className=\"slide\">내 장점이 뭔지 알아?</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon2} />\r\n              </div>\r\n              <div className=\"slide\">ㄴ겠냐</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon3} />\r\n              </div>\r\n              <div className=\"slide\">어이, 강프로 식사는 잡쉈어?</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon1} />\r\n              </div>\r\n              <div className=\"slide\">하남자 특)</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon2} />\r\n              </div>\r\n              <div className=\"slide\">그 잡채</div>\r\n              <div className=\"slide-icon\">\r\n                <img className=\"slide-icon\" src={slideIcon3} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <HomeText>\r\n          <HomeMainTtitle>\r\n            WITH MEME\r\n            <br />\r\n            WITH ME,\r\n            <br />\r\n          </HomeMainTtitle>\r\n          <HomeMainText>\r\n            올 한 해,\r\n            <br />\r\n            당신에게\r\n            <br />\r\n            최고의 밈은\r\n            <br />\r\n            무엇인가요?\r\n          </HomeMainText>\r\n          <br />\r\n          <br />\r\n          <HomeSubText>\r\n            ‘밈’ 만큼 우리 문화를 잘 보여주는 것이 있을까요?\r\n            <br />\r\n            문화를 넘어 시대의 아이콘으로 자리 잡은 밈,\r\n            <br />\r\n            올해 최고의 밈에 투표해 주세요!\r\n          </HomeSubText>\r\n        </HomeText>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst BannerImg = styled.img`\r\n  width: 100%;\r\n  margin: 0;\r\n`;\r\nconst HomeText = styled.div`\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n  font-family: \"SUITM\";\r\n  text-align: left;\r\n  font-weight: bold;\r\n  background: #1d1d1d;\r\n  padding: 2rem 3rem;\r\n  padding-bottom: 5rem;\r\n`;\r\nconst HomeMainTtitle = styled.div`\r\n  font-size: 5rem;\r\n  color: #faff00;\r\n  margin-top: 5rem;\r\n  line-height: 5rem;\r\n  font-family: \"SUITM\";\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 4.5rem;\r\n  }\r\n`;\r\nconst HomeMainText = styled.div`\r\n  margin-top: 5rem;\r\n  font-size: 5.5rem;\r\n  font-family: \"SUITM\";\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 4.5rem;\r\n  }\r\n`;\r\nconst HomeSubText = styled.div`\r\n  font-size: 1.5rem;\r\n  font-weight: normal;\r\n  line-height: 3rem;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\Firebase.js",["118"],[],"// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD-uxjdsPg49Oh4FFiSK5pr8WI5tyBXGpk\",\r\n  authDomain: \"meme-awards-2022.firebaseapp.com\",\r\n  projectId: \"meme-awards-2022\",\r\n  storageBucket: \"meme-awards-2022.appspot.com\",\r\n  messagingSenderId: \"463606462421\",\r\n  appId: \"1:463606462421:web:fd0430408d03dad0442f5c\",\r\n};\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Clock.js",["119"],[],"import { React, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEADLINE } from \"../data/data\";\r\n\r\nimport CircleDown from \"../image/Clock_circle_down.png\";\r\n\r\nexport default function Clock() {\r\n  const currentTime = new Date();\r\n  const remainingTime = DEADLINE - currentTime;\r\n\r\n  const [time, setTime] = useState(remainingTime);\r\n  const [day, setDay] = useState(\"\");\r\n  const [hour, setHour] = useState(\"\");\r\n  const [minute, setMinute] = useState(\"\");\r\n  const [second, setSecond] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const diffDay = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const diffHour = Math.floor((time / (1000 * 60 * 60)) % 24);\r\n    const diffMin = Math.floor((time / (1000 * 60)) % 60);\r\n    const diffSec = Math.floor((time / 1000) % 60);\r\n\r\n    const id = setInterval(() => {\r\n      setTime(time - 1000);\r\n      setDay(diffDay);\r\n      setHour(diffHour);\r\n      setMinute(diffMin);\r\n      setSecond(diffSec);\r\n    }, 1000);\r\n    // 1초마다 실행되는 인터벌을 이용해 1초마다 다시 랜더링 시켜줌\r\n    return () => clearInterval(id);\r\n    // 페이지를 벗어나게되면 반복을 종료해줌\r\n  }, [time]);\r\n\r\n  return (\r\n    <TimeContainer>\r\n      <TimeTitle>MEME AWARDS VOTE</TimeTitle>\r\n      <TimeSubtitle>\r\n        여러분의 밈에\r\n        <br />\r\n        투표해 주세요!\r\n      </TimeSubtitle>\r\n      {currentTime < DEADLINE ? (\r\n        <VotingPeriod>2022년 12월 9일(금)~12월 18일(일) 23:59</VotingPeriod>\r\n      ) : null}\r\n\r\n      <Time className=\"time\">\r\n        <TimeBox>\r\n          <TimeNum>{day}</TimeNum>\r\n          <TimeText>DAYS</TimeText>\r\n        </TimeBox>\r\n        <TimeDot className=\"TimeDot\">:</TimeDot>\r\n        <TimeBox>\r\n          <TimeNum>{hour < 10 ? \"0\" + hour : hour}</TimeNum>\r\n          <TimeText>HOURS</TimeText>\r\n        </TimeBox>\r\n        <TimeDot className=\"TimeDot\">:</TimeDot>\r\n        <TimeBox>\r\n          <TimeNum>{minute < 10 ? \"0\" + minute : minute}</TimeNum>\r\n          <TimeText>MINUTES</TimeText>\r\n        </TimeBox>\r\n        <TimeDot className=\"TimeDot\">:</TimeDot>\r\n        <TimeBox>\r\n          <TimeNum>{second < 10 ? \"0\" + second : second}</TimeNum>\r\n          <TimeText>SECONDS</TimeText>\r\n        </TimeBox>\r\n      </Time>\r\n      <TimeBottom>\r\n        TV/OTT, SNS, 스포츠 포함\r\n        <br />총 <span style={{ color: \"#FAFF00\" }}>6개 부문</span>에 투표가\r\n        가능합니다.\r\n      </TimeBottom>\r\n      <TimeImageBox>\r\n        <img style={{ width: \"5rem\" }} src={CircleDown} />\r\n      </TimeImageBox>\r\n    </TimeContainer>\r\n  );\r\n}\r\n\r\nconst TimeContainer = styled.div`\r\n  background: #1d1d1d;\r\n  padding: 7rem 0 4rem 0;\r\n`;\r\n\r\nconst TimeTitle = styled.div`\r\n  text-align: center;\r\n  color: #faff00;\r\n  font: \"Cabin\";\r\n  font-size: 16px;\r\n  font-family: \"SUITM\";\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst TimeSubtitle = styled.div`\r\n  text-align: center;\r\n  font-size: 4.5rem;\r\n  margin-top: 16px;\r\n  font-family: \"SUITM\";\r\n  color: white;\r\n  font-weight: bold;\r\n  line-height: 6rem;\r\n`;\r\n\r\nconst Time = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  line-height: 5rem;\r\n  font-family: \"SUITM\";\r\n  margin-top: 2rem;\r\n\r\n  @media screen and (max-width: 350px) {\r\n    width: 85%;\r\n    margin-left: 7.5%;\r\n  }\r\n`;\r\n\r\nconst TimeBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst TimeNum = styled.div`\r\n  width: 8rem;\r\n  height: 8rem;\r\n  background: white;\r\n  border-radius: 1rem;\r\n  line-height: 8rem;\r\n  font-family: \"SUITM\";\r\n  font-weight: bold;\r\n  font-size: 4rem;\r\n  color: black;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 7rem;\r\n    height: 7rem;\r\n    line-height: 7rem;\r\n    font-size: 3.5rem;\r\n  }\r\n`;\r\nconst TimeText = styled.div`\r\n  text-align: center;\r\n  color: white;\r\n  font-family: \"SUITM\";\r\n  font-size: 1.3rem;\r\n  margin-top: -1.5rem;\r\n`;\r\nconst TimeDot = styled.div`\r\n  font-size: 3.5rem;\r\n  color: white;\r\n  font-family: \"SUITM\";\r\n  line-height: 7rem;\r\n  margin: 0 1rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    margin: 0 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TimeBottom = styled.div`\r\n  text-align: center;\r\n  color: white;\r\n  font-family: \"SUITM\";\r\n  font-size: 2.2rem;\r\n  margin-top: 5rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst TimeImageBox = styled.div`\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst VotingPeriod = styled.div`\r\n  font-family: \"SUITM\";\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 2rem;\r\n  margin: 2rem 0 3rem 0;\r\n`;\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Vote.js",["120","121","122","123","124"],[],"import { useEffect, useState, useRef, React } from \"react\";\r\nimport \"../css/Vote.css\";\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  updateDoc,\r\n  increment,\r\n  getDoc,\r\n  getDocs,\r\n  collection,\r\n} from \"firebase/firestore\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Guide from \"../image/Vote_intro.png\";\r\nimport Done from \"../image/vote_done.png\";\r\nimport CircleDown from \"../image/Clock_circle_down.png\";\r\n\r\nimport { descriptions, DEADLINE, BEFORE_DEADLINE, LIVEDAY } from \"../data/data\";\r\n\r\n// 투표 시 시간차를 두고 다음 부문으로 스크롤\r\nconst handleScroll = (destination) => {\r\n  let voteBox1 = document.querySelector(\".voteBox1\");\r\n  let voteBox2 = document.querySelector(\".voteBox2\");\r\n  let voteBox3 = document.querySelector(\".voteBox3\");\r\n  let voteBox4 = document.querySelector(\".voteBox4\");\r\n  let voteBox5 = document.querySelector(\".voteBox5\");\r\n  let voteBox6 = document.querySelector(\".voteBox6\");\r\n\r\n  let voteBoxPosition = {\r\n    TV_OTT: voteBox1.offsetTop,\r\n    CONTENT: voteBox2.offsetTop,\r\n    SNS_COMMUNITY: voteBox3.offsetTop,\r\n    MEMEPOSE: voteBox4.offsetTop,\r\n    SPORTS: voteBox5.offsetTop,\r\n    CHARACTER: voteBox6.offsetTop,\r\n  };\r\n\r\n  switch (destination) {\r\n    case \"TV_OTT\":\r\n      scrollMove(voteBoxPosition[\"CONTENT\"], -20);\r\n      break;\r\n    case \"CONTENT\":\r\n      scrollMove(voteBoxPosition[\"SNS_COMMUNITY\"], -20);\r\n      break;\r\n    case \"SNS_COMMUNITY\":\r\n      scrollMove(voteBoxPosition[\"MEMEPOSE\"], -20);\r\n      break;\r\n    case \"MEMEPOSE\":\r\n      scrollMove(voteBoxPosition[\"SPORTS\"], -20);\r\n      break;\r\n    case \"SPORTS\":\r\n      scrollMove(voteBoxPosition[\"CHARACTER\"], -20);\r\n      break;\r\n    default:\r\n      scrollMove(voteBoxPosition[\"CHARACTER\"], 700);\r\n  }\r\n};\r\n\r\nconst scrollMove = (destination, additional) => {\r\n  setTimeout(() => {\r\n    window.scrollTo(destination + additional, destination + additional);\r\n  }, 500);\r\n};\r\n\r\nconst getTotalVoteCount = async () => {\r\n  let totalCount = 0;\r\n\r\n  const db = getFirestore();\r\n  const totalCountRef = doc(db, \"SUM\", \"COUNT\");\r\n  const querySnapShot = await getDoc(totalCountRef);\r\n\r\n  totalCount = querySnapShot.data().count;\r\n\r\n  return totalCount;\r\n};\r\n\r\nconst getCurrentCount = async () => {\r\n  let countArray = {};\r\n\r\n  const db = getFirestore();\r\n  const docSnap = await getDocs(collection(db, \"TOTAL\"));\r\n  docSnap.forEach((doc) => {\r\n    countArray[doc.id] = doc.data();\r\n  });\r\n\r\n  return countArray;\r\n};\r\n\r\nexport default function Vote() {\r\n  const [totalVoteCount, setTotalVoteCount] = useState(0);\r\n  const [partialVoteCount, setPartialVotecount] = useState({});\r\n\r\n  let currentTime = new Date();\r\n\r\n  const [isVoted, setIsVoted] = useState({\r\n    TV_OTT: false,\r\n    CONTENT: false,\r\n    SNS_COMMUNITY: false,\r\n    MEMEPOSE: false,\r\n    SPORTS: false,\r\n    CHARACTER: false,\r\n  });\r\n\r\n  const [btnActive, setBtnActive] = useState({\r\n    TV_OTT: \"\",\r\n    CONTENT: \"\",\r\n    SNS_COMMUNITY: \"\",\r\n    MEMEPOSE: \"\",\r\n    SPORTS: \"\",\r\n    CHARACTER: \"\",\r\n  });\r\n\r\n  const nominationIndex = [\"1\", \"2\", \"3\", \"4\"];\r\n\r\n  const toggleActive = (e, part) => {\r\n    // 각 후보에 해당하는 DIV toggle용\r\n    if (btnActive[part] === \"\") {\r\n      if (e.target.tagName == \"DIV\") {\r\n        setBtnActive({\r\n          ...btnActive,\r\n          [part]: e.target.parentNode.parentNode.getAttribute(\"value\"),\r\n        });\r\n      } else {\r\n        setBtnActive({\r\n          ...btnActive,\r\n          [part]: e.target.parentNode.getAttribute(\"value\"),\r\n        });\r\n        e.stopPropagation();\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateTotalCount = async (memeName) => {\r\n    // 총 투표수 업데이트\r\n    const db = getFirestore();\r\n    const sumRef = doc(db, \"SUM\", \"COUNT\");\r\n    const partialRef = doc(db, \"TOTAL\", memeName);\r\n    await updateDoc(partialRef, {\r\n      count: increment(1),\r\n    });\r\n    await updateDoc(sumRef, {\r\n      count: increment(1),\r\n    });\r\n  };\r\n\r\n  const voteMeme = async (memeType, memeName) => {\r\n    // 투표 반영\r\n    const db = getFirestore();\r\n    const memeRefArray = doc(db, memeType, memeName);\r\n    await updateDoc(memeRefArray, {\r\n      count: increment(1),\r\n    });\r\n    updateTotalCount(memeName);\r\n  };\r\n\r\n  const setData = (memeName, event, part) => {\r\n    // state 확인 후 투표한 부문이면 재투표 방지\r\n    if (currentTime < DEADLINE) {\r\n      toggleActive(event, part);\r\n      if (isVoted[part] === false) {\r\n        setIsVoted((prev) => {\r\n          let newIsVoted = { ...prev };\r\n          newIsVoted[part] = true;\r\n          return newIsVoted;\r\n        });\r\n        voteMeme(part, memeName);\r\n        handleScroll(part);\r\n      } else {\r\n        alert(\"이미 해당 부문에 투표했습니다!\");\r\n      }\r\n    } else {\r\n      alert(\"투표가 종료됐습니다!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTotalVoteCount().then((voteCount) => {\r\n      setTotalVoteCount(voteCount);\r\n    });\r\n\r\n    getCurrentCount().then((countResult) => {\r\n      Object.entries(countResult).forEach((item) => {\r\n        setPartialVotecount((prev) => {\r\n          let newCount = { ...prev };\r\n          newCount[item[0]] = item[1];\r\n          return newCount;\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VoteContainer>\r\n        {currentTime < DEADLINE ? (\r\n          <VoteIntro>\r\n            <VoteTitle>START VOTING</VoteTitle>\r\n            <VoteSubtitle>투표? 가보자고</VoteSubtitle>\r\n            {currentTime < BEFORE_DEADLINE ? (\r\n              <></>\r\n            ) : (\r\n              <DeadlineText>\r\n                * 스포일러 방지를 위해 투표 마감 D-1에는\r\n                <br />\r\n                투표수 마지막 자리만 공개됩니다.\r\n              </DeadlineText>\r\n            )}\r\n            <img\r\n              alt=\"투표관련정보\"\r\n              style={{ width: \"80%\", margin: \"3% 10% 3% 10%\" }}\r\n              src={Guide}\r\n            />\r\n            <VoteCounter>\r\n              현재 총 투표수 <VoteCount>{totalVoteCount}</VoteCount>\r\n            </VoteCounter>\r\n          </VoteIntro>\r\n        ) : currentTime < LIVEDAY ? (\r\n          <VoteIntro>\r\n            <VoteSubtitle>투표 종료</VoteSubtitle>\r\n            <VoteSubtext>하단에서 각 부분별 후보를 만나보세요!</VoteSubtext>\r\n            <TimeImageBox>\r\n              <img style={{ width: \"5rem\" }} src={CircleDown} />\r\n            </TimeImageBox>\r\n          </VoteIntro>\r\n        ) : (\r\n          <VoteIntro>\r\n            <VoteSubtitle>투표 결과</VoteSubtitle>\r\n            <VoteSubtext>\r\n              올 한해 우리의 웃음을 책임진 밈을 만나보세요\r\n            </VoteSubtext>\r\n            <TimeImageBox>\r\n              <img style={{ width: \"5rem\" }} src={CircleDown} />\r\n            </TimeImageBox>\r\n          </VoteIntro>\r\n        )}\r\n\r\n        <HorizonalLine />\r\n        {Object.values(descriptions).map((item, idx) => {\r\n          return (\r\n            <div className={\"voteBox\" + (idx + 1)} key={item.title}>\r\n              <VotePartTitle>{item.title}</VotePartTitle>\r\n              <VotePartSubtitle>\r\n                {item.subtitle1}\r\n                <br />\r\n                {item.subtitle2}\r\n              </VotePartSubtitle>\r\n\r\n              <VoteBox>\r\n                {nominationIndex.map((items, idx) => {\r\n                  return (\r\n                    <Nomination\r\n                      value={`${item.part}${idx + 1}`}\r\n                      className={\r\n                        item.part +\r\n                        `${idx + 1}` +\r\n                        (btnActive[item.part] === `${item.part}${idx + 1}`\r\n                          ? \" active\"\r\n                          : \"\")\r\n                      }\r\n                      key={item.meme[idx]}\r\n                      onClick={(e) =>\r\n                        setData(item.meme[idx], e, `${item.part}`)\r\n                      }\r\n                    >\r\n                      <img\r\n                        className=\"meme-image\"\r\n                        src={require(`../image/meme/${item.part}${\r\n                          idx + 1\r\n                        }.png`)}\r\n                        onClick={(e) =>\r\n                          setData(item.meme[idx], e, `${item.part}`)\r\n                        }\r\n                      />\r\n                      <div className=\"meme-info\">\r\n                        <div className=\"meme-name\">{item.meme[idx]}</div>\r\n                        <div className=\"meme-count\">\r\n                          {currentTime < DEADLINE\r\n                            ? JSON.stringify(\r\n                                partialVoteCount[item.meme[idx]]?.count\r\n                              )\r\n                            : `????${\r\n                                JSON.stringify(\r\n                                  partialVoteCount[item.meme[idx]]?.count\r\n                                )[0]\r\n                              }`}\r\n                          표\r\n                        </div>\r\n                        <div className=\"meme-block\"></div>\r\n                      </div>\r\n                      <img\r\n                        className=\"vote-done-image\"\r\n                        alt=\"투표완료\"\r\n                        src={Done}\r\n                      />\r\n                    </Nomination>\r\n                  );\r\n                })}\r\n              </VoteBox>\r\n            </div>\r\n          );\r\n        })}\r\n      </VoteContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst VoteContainer = styled.div`\r\n  margin-top: 7rem;\r\n`;\r\n\r\nconst VoteIntro = styled.div``;\r\n\r\nconst VoteCounter = styled.div`\r\n  text-align: center;\r\n  color: #faff00;\r\n  font-family: \"SUITM\";\r\n  font-size: 2.5rem;\r\n  margin-bottom: 7rem;\r\n`;\r\nconst VoteCount = styled.span`\r\n  font-weight: bold;\r\n  font-size: 2.8rem;\r\n`;\r\n\r\nconst HorizonalLine = styled.hr`\r\n  color: white;\r\n  width: 80%;\r\n  margin: 5rem;\r\n  margin-left: 10%;\r\n`;\r\n\r\nconst VoteTitle = styled.div`\r\n  text-align: center;\r\n  color: #faff00;\r\n  font-size: 16px;\r\n  font-family: \"SUITM\";\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst VoteSubtitle = styled.div`\r\n  text-align: center;\r\n  font-size: 5rem;\r\n  margin-top: 16px;\r\n  font-family: \"SUITM\";\r\n  color: white;\r\n  font-weight: bold;\r\n  line-height: 6rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nconst VotePartTitle = styled.div`\r\n  color: white;\r\n  font-size: 3.5rem;\r\n  text-align: left;\r\n  margin-bottom: 1rem;\r\n  margin-left: 10%;\r\n  font-family: \"SUITM\";\r\n  font-weight: bolder;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\nconst VotePartSubtitle = styled.div`\r\n  text-align: left;\r\n  margin-left: 10%;\r\n  font-family: \"SUITM\";\r\n  font-weight: lighter;\r\n  color: white;\r\n  font-size: 1.7rem;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst VoteBox = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  width: 90% !important;\r\n  margin: auto;\r\n  margin-top: 3rem;\r\n  margin-bottom: 10rem;\r\n  line-height: 5rem;\r\n`;\r\nconst Nomination = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 95%;\r\n  margin: auto;\r\n  margin-top: 1rem;\r\n  color: white;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  height: 13rem;\r\n  line-height: 7rem;\r\n  cursor: pointer;\r\n  background-color: #1d1d1d;\r\n  transition: 0.1s;\r\n  border-radius: 1rem;\r\n  padding: 0;\r\n  z-index: 99;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    height: 11rem;\r\n  }\r\n`;\r\n\r\nconst DeadlineText = styled.div`\r\n  font-family: \"SUITM\";\r\n  text-align: center;\r\n  color: #7a7a7a;\r\n  margin: 2rem 0 2rem 0;\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nconst TimeImageBox = styled.div`\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n`;\r\nconst VoteSubtext = styled.div`\r\n  color: #faff00;\r\n  text-align: center;\r\n  font-size: 2.2rem;\r\n  margin: 1rem 0 3rem 0;\r\n  font-family: \"SUITM\";\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Top2.js",["125"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  query,\r\n  limit,\r\n  orderBy,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\nimport styled from \"styled-components\";\r\nimport \"../css/Top2.css\";\r\nimport { Top2Data } from \"../data/data.js\";\r\n\r\nconst getTop2 = async () => {\r\n  let top2Meme = [];\r\n  let top2Count = [];\r\n\r\n  const db = getFirestore();\r\n  const top2 = collection(db, \"TOTAL\");\r\n  const q = query(top2, orderBy(\"count\", \"desc\"), limit(2));\r\n  const querySnapShot = await getDocs(q);\r\n\r\n  querySnapShot.forEach((doc) => {\r\n    top2Meme.push(doc.id);\r\n    top2Count.push(doc.data().count);\r\n  });\r\n\r\n  return [top2Meme, top2Count];\r\n};\r\n\r\nexport default function Top2() {\r\n  const [memeInfo, setMemeInfo] = useState({ list: [], count: [] });\r\n\r\n  useEffect(() => {\r\n    getTop2().then(([top2Meme, top2Count]) => {\r\n      setMemeInfo({\r\n        list: top2Meme,\r\n        count: top2Count,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Top2Container>\r\n      <Top2Title>MEME OF THE YEAR</Top2Title>\r\n      <Top2Subtitle>실시간 올해의 밈</Top2Subtitle>\r\n      <Top2Image>\r\n        <div className=\"top2-image-box\">\r\n          {memeInfo.list.map((item, idx) => {\r\n            return (\r\n              <img\r\n                className={`meme rank${idx + 1}`}\r\n                src={require(`../image/meme/${Top2Data[item]}.png`)}\r\n                key={`meme-rank${idx + 1}`}\r\n              />\r\n            );\r\n          })}\r\n          <div className=\"top2-vs\">VS</div>\r\n        </div>\r\n      </Top2Image>\r\n      <Top2Meme>\r\n        <TopMemeName>\r\n          {memeInfo.list.map((item, idx) => {\r\n            return (\r\n              <div className={`topMeme top${idx + 1}`} key={item}>\r\n                {item}\r\n              </div>\r\n            );\r\n          })}\r\n        </TopMemeName>\r\n        <TopMemeCount>\r\n          {memeInfo.count.map((item, idx) => {\r\n            return (\r\n              <div className={`memeCount top${idx + 1}`} key={`top${idx + 1}`}>\r\n                {item}표\r\n              </div>\r\n            );\r\n          })}\r\n        </TopMemeCount>\r\n      </Top2Meme>\r\n    </Top2Container>\r\n  );\r\n}\r\n\r\nconst Top2Container = styled.div`\r\n  height: 600px;\r\n  padding: 6.5rem 3rem;\r\n`;\r\n\r\nconst Top2Title = styled.div`\r\n  text-align: center;\r\n  color: #faff00;\r\n  font: \"Cabin\";\r\n  font-size: 16px;\r\n  font-family: \"SUITM\";\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n`;\r\nconst Top2Subtitle = styled.div`\r\n  text-align: center;\r\n  font-size: 5rem;\r\n  margin-top: 16px;\r\n  font-family: \"SUITM\";\r\n  color: white;\r\n  font-weight: bold;\r\n  line-height: 6rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nconst Top2Meme = styled.div`\r\n  text-align: center;\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst TopMemeName = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TopMemeCount = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Top2Image = styled.div`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Link.js",["126"],[],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AFTERLIVE, DEADLINE, LIVEDAY } from \"../data/data\";\r\n\r\nexport default function Link() {\r\n  const contactUrl = \"https://twitter.com/banggooso\";\r\n  const liveLink = \"http://bit.ly/3uEb0Ii\";\r\n  const testLink = \"https://bityl.co/G6Qc\";\r\n\r\n  const currentTime = new Date();\r\n\r\n  return (\r\n    <>\r\n      <LinkContainer>\r\n        <AwardsLink>\r\n          <LinkTitle>ONLINE AWARDS</LinkTitle>\r\n          <LinkSubtitle>\r\n            내 손으로 뽑은\r\n            <br />\r\n            올해 최고의 밈은?\r\n          </LinkSubtitle>\r\n          <LiveTime>12월 21일 21시 LIVE</LiveTime>\r\n          <LinkBox\r\n            onClick={() => {\r\n              window.open(liveLink);\r\n            }}\r\n          >\r\n            <div style={{ marginLeft: \"2rem\", flex: \"7\" }}>\r\n              {currentTime < DEADLINE\r\n                ? \"시상식 알림 설정하러 가기\"\r\n                : currentTime < AFTERLIVE\r\n                ? \"밈 어워즈 시상식 보러 가기\"\r\n                : \"밈 어워즈 시상식 다시보기\"}\r\n            </div>\r\n            <div style={{ flex: \"1\" }}>〉</div>\r\n          </LinkBox>\r\n        </AwardsLink>\r\n        <MemeTestLink>\r\n          <LinkTitle>2022 MEME TEST</LinkTitle>\r\n          <LinkSubtitle>\r\n            나의 밈 레벨이\r\n            <br />\r\n            궁금하다면?\r\n          </LinkSubtitle>\r\n          <LinkBox\r\n            onClick={() => {\r\n              window.open(testLink);\r\n            }}\r\n          >\r\n            <div style={{ textAlign: \"left\", marginLeft: \"2.5rem\", flex: \"7\" }}>\r\n              2022 MEME TEST 하러 가기\r\n            </div>\r\n            <div style={{ flex: \"1\" }}>〉</div>\r\n          </LinkBox>\r\n        </MemeTestLink>\r\n      </LinkContainer>\r\n      <ContactBox>\r\n        <LinkTitle>CONTACT US!</LinkTitle>\r\n        <LinkSubtitle>\r\n          밈 어워즈의\r\n          <br />\r\n          빠른 소식과 제보는?\r\n        </LinkSubtitle>\r\n        <ContactLinkBox\r\n          onClick={() => {\r\n            window.open(contactUrl);\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              textAlign: \"left\",\r\n              marginLeft: \"2.5rem\",\r\n              flex: \"7\",\r\n              fontFamily: \"SUITM\",\r\n            }}\r\n          >\r\n            twitter @banggooso\r\n          </div>\r\n          <div style={{ flex: \"1\" }}>〉</div>\r\n        </ContactLinkBox>\r\n      </ContactBox>\r\n    </>\r\n  );\r\n}\r\n\r\nconst LinkContainer = styled.div`\r\n  padding: 7rem 0;\r\n  background: #1d1d1d;\r\n`;\r\nconst AwardsLink = styled.div`\r\n  background: #1d1d1d;\r\n`;\r\nconst MemeTestLink = styled.div`\r\n  margin-top: 7rem;\r\n  background: #1d1d1d;\r\n  padding: 7rem 0;\r\n`;\r\nconst LinkTitle = styled.div`\r\n  text-align: center;\r\n  color: #faff00;\r\n  font: \"Cabin\";\r\n  font-size: 16px;\r\n  font-family: \"SUITM\";\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n`;\r\nconst LinkSubtitle = styled.div`\r\n  text-align: center;\r\n  font-size: 5rem;\r\n  margin-top: 16px;\r\n  font-family: \"SUITM\";\r\n  color: white;\r\n  font-weight: bold;\r\n  line-height: 6rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nconst LiveTime = styled.div`\r\n  text-align: center;\r\n  color: #faff00;\r\n  font-family: \"SUITM\";\r\n  font-size: 3rem;\r\n  margin-top: 2rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst LinkBox = styled.div`\r\n  display: flex;\r\n  text-align: left;\r\n  width: 85%;\r\n  margin: auto;\r\n  background: #faff00;\r\n  margin-top: 3rem;\r\n  cursor: pointer;\r\n  font-family: \"SUITM\";\r\n  font-weight: bold;\r\n  font-size: 2.2rem;\r\n  padding: 3rem 1rem;\r\n  border-radius: 0.5rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\nconst ContactBox = styled.div`\r\n  margin: 10rem 0;\r\n`;\r\nconst ContactLinkBox = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  width: 85%;\r\n  margin: auto;\r\n  background: #1d1d1d;\r\n  margin-top: 3rem;\r\n  cursor: pointer;\r\n  font-family: \"SUITM\";\r\n  font-size: 2rem;\r\n  padding: 3rem 1rem;\r\n  border-radius: 0.5rem;\r\n  color: white;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Footer.js",["127","128"],[],"import { React, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport \"../css/Footer.css\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <FooterContainer>\r\n      <HorizonalLine />\r\n      <EmailBox>✉ info@banggooso.com</EmailBox>\r\n      <BrandBox>Copyright © 2022 SoftSphere.</BrandBox>\r\n    </FooterContainer>\r\n  );\r\n}\r\n\r\nconst FooterContainer = styled.div`\r\n  height: 25rem;\r\n`;\r\n\r\nconst EmailBox = styled.div`\r\n  text-align: left;\r\n  font-size: 2.5rem;\r\n  color: white;\r\n  margin-left: 5%;\r\n  margin-top: 3rem;\r\n  font-family: \"SUITM\";\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst BrandBox = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: left;\r\n  color: white;\r\n  font-size: 1.75rem;\r\n  margin-left: 5%;\r\n  margin-top: 7rem;\r\n  font-weight: lighter;\r\n  font-family: \"SUITM\";\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\nconst HorizonalLine = styled.hr`\r\n  color: white;\r\n  width: 100%;\r\n`;\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\data\\data.js",[],[],"C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Clock2.js",[],[],"C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\Winner.js",["129"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  query,\r\n  limit,\r\n  orderBy,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\nimport styled from \"styled-components\";\r\nimport \"../css/Top2.css\";\r\nimport { Top2Data } from \"../data/data.js\";\r\n\r\nimport BG from \"../image/bg.png\";\r\n\r\nconst getFirstPlace = async () => {\r\n  let topMeme = [];\r\n  let topCount = [];\r\n\r\n  const db = getFirestore();\r\n  const top2 = collection(db, \"TOTAL\");\r\n  const q = query(top2, orderBy(\"count\", \"desc\"), limit(1));\r\n  const querySnapShot = await getDocs(q);\r\n\r\n  querySnapShot.forEach((doc) => {\r\n    topMeme.push(doc.id);\r\n    topCount.push(doc.data().count);\r\n  });\r\n\r\n  return [topMeme, topCount];\r\n};\r\n\r\nexport default function Winner() {\r\n  const [memeInfo, setMemeInfo] = useState({ list: [], count: [] });\r\n\r\n  useEffect(() => {\r\n    getFirstPlace().then(([topMeme, topCount]) => {\r\n      setMemeInfo({\r\n        list: topMeme,\r\n        count: topCount,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Top2Container>\r\n      <Top2Title>MEME OF THE YEAR</Top2Title>\r\n      <Top2Subtitle>올해의 밈</Top2Subtitle>\r\n      <Top2Image>\r\n        <div className=\"top2-image-box\">\r\n          {memeInfo.list.map((item, idx) => {\r\n            return (\r\n              <img\r\n                className={`meme rank${idx + 1}`}\r\n                src={require(`../image/meme/${Top2Data[item]}.png`)}\r\n                key={`meme-rank${idx + 1}`}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </Top2Image>\r\n      <Top2Meme>\r\n        <TopMemeName>\r\n          {memeInfo.list.map((item, idx) => {\r\n            return (\r\n              <div className={`topMeme top${idx + 1}`} key={item}>\r\n                {item}\r\n              </div>\r\n            );\r\n          })}\r\n        </TopMemeName>\r\n        <TopMemeCount>\r\n          {memeInfo.count.map((item, idx) => {\r\n            return (\r\n              <div className={`memeCount top${idx + 1}`} key={`top${idx + 1}`}>\r\n                {item}표\r\n              </div>\r\n            );\r\n          })}\r\n        </TopMemeCount>\r\n      </Top2Meme>\r\n    </Top2Container>\r\n  );\r\n}\r\n\r\nconst Top2Container = styled.div`\r\n  height: 700px;\r\n  padding: 6.5rem 3rem;\r\n  background-image: url(${BG});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Top2Title = styled.div`\r\n  text-align: center;\r\n  color: #faff00;\r\n  font: \"Cabin\";\r\n  font-size: 16px;\r\n  font-family: \"SUITM\";\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n`;\r\nconst Top2Subtitle = styled.div`\r\n  text-align: center;\r\n  font-size: 5rem;\r\n  margin-top: 16px;\r\n  font-family: \"SUITM\";\r\n  color: white;\r\n  font-weight: bold;\r\n  line-height: 6rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nconst Top2Meme = styled.div`\r\n  text-align: center;\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst TopMemeName = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TopMemeCount = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Top2Image = styled.div`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\pages\\LastAwardsVideo.js",[],[],"C:\\Users\\p-d0175\\Desktop\\meme-awards\\src\\data\\ShareAPI.js",["130","131","132"],[],"import { React, useState, useEffect } from \"react\";\r\n\r\nexport const KakaoShare = (route, title) => {\r\n  // url이 id값에 따라 변경되기 때문에 route를 인자값으로 받아줌\r\n  if (window.Kakao) {\r\n    const kakao = window.Kakao;\r\n\r\n    kakao.Link.sendDefault({\r\n      objectType: \"feed\", // 카카오 링크 공유 여러 type들 중 feed라는 타입 -> 자세한 건 카카오에서 확인\r\n      content: {\r\n        title: title, // 인자값으로 받은 title\r\n        description: \"대국민 밈 연말정산, 올해의 밈을 뽑아주세요!\", // 인자값으로 받은 title\r\n        imageUrl:\r\n          \"https://cdn.banggooso.com/assets/images/2022-meme-awards/share-kakao.png\",\r\n        link: {\r\n          mobileWebUrl: route, // 인자값으로 받은 route(uri 형태)\r\n          webUrl: route,\r\n        },\r\n      },\r\n      buttons: [\r\n        {\r\n          title: \"올해의 밈 투표하기\",\r\n          link: {\r\n            mobileWebUrl: route,\r\n            webUrl: route,\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  }\r\n};\r\n\r\nexport const shareTwitter = (url) => {\r\n  const text = \"2022년을 뒤흔든 최고의 밈을 뽑아주세요!\";\r\n  window.open(\"https://twitter.com/intent/tweet?text=\" + text + \"&url=\" + url);\r\n};\r\n",{"ruleId":"133","severity":1,"message":"134","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":60,"column":9,"nodeType":"139","endLine":60,"endColumn":37},{"ruleId":"137","severity":1,"message":"138","line":70,"column":13,"nodeType":"139","endLine":74,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":78,"column":11,"nodeType":"139","endLine":82,"endColumn":12},{"ruleId":"137","severity":1,"message":"138","line":85,"column":11,"nodeType":"139","endLine":93,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":28,"column":17,"nodeType":"139","endLine":28,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":32,"column":17,"nodeType":"139","endLine":32,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":36,"column":17,"nodeType":"139","endLine":36,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":40,"column":17,"nodeType":"139","endLine":40,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":44,"column":17,"nodeType":"139","endLine":44,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":48,"column":17,"nodeType":"139","endLine":48,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":52,"column":17,"nodeType":"139","endLine":52,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":56,"column":17,"nodeType":"139","endLine":56,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":60,"column":17,"nodeType":"139","endLine":60,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":64,"column":17,"nodeType":"139","endLine":64,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":68,"column":17,"nodeType":"139","endLine":68,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":72,"column":17,"nodeType":"139","endLine":72,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":76,"column":17,"nodeType":"139","endLine":76,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":80,"column":17,"nodeType":"139","endLine":80,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":84,"column":17,"nodeType":"139","endLine":84,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":88,"column":17,"nodeType":"139","endLine":88,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":92,"column":17,"nodeType":"139","endLine":92,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":96,"column":17,"nodeType":"139","endLine":96,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":100,"column":17,"nodeType":"139","endLine":100,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":104,"column":17,"nodeType":"139","endLine":104,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":108,"column":17,"nodeType":"139","endLine":108,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":112,"column":17,"nodeType":"139","endLine":112,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":116,"column":17,"nodeType":"139","endLine":116,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":120,"column":17,"nodeType":"139","endLine":120,"endColumn":64},{"ruleId":"133","severity":1,"message":"142","line":18,"column":7,"nodeType":"135","messageId":"136","endLine":18,"endColumn":9},{"ruleId":"140","severity":1,"message":"141","line":74,"column":9,"nodeType":"139","endLine":74,"endColumn":59},{"ruleId":"133","severity":1,"message":"143","line":1,"column":31,"nodeType":"135","messageId":"136","endLine":1,"endColumn":37},{"ruleId":"144","severity":1,"message":"145","line":118,"column":28,"nodeType":"146","messageId":"147","endLine":118,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":222,"column":15,"nodeType":"139","endLine":222,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":232,"column":15,"nodeType":"139","endLine":232,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":265,"column":23,"nodeType":"139","endLine":273,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":51,"column":15,"nodeType":"139","endLine":55,"endColumn":17},{"ruleId":"133","severity":1,"message":"148","line":3,"column":31,"nodeType":"135","messageId":"136","endLine":3,"endColumn":38},{"ruleId":"133","severity":1,"message":"149","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"150","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":53,"column":15,"nodeType":"139","endLine":57,"endColumn":17},{"ruleId":"133","severity":1,"message":"151","line":1,"column":10,"nodeType":"135","messageId":"136","endLine":1,"endColumn":15},{"ruleId":"133","severity":1,"message":"149","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"150","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},"no-unused-vars","'Firebase' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'db' is assigned a value but never used.","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'LIVEDAY' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used."]