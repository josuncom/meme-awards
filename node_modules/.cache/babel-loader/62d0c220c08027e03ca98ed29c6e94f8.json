{"ast":null,"code":"import { collection, getFirestore, getDocs, addDoc, doc, getDoc } from \"firebase/firestore\";\nexport async function getData() {\n  const db = getFirestore();\n  const querySnapShot = await getDocs(collection(db, \"meme-awards\"));\n  querySnapShot.forEach(doc => {\n    console.log(doc.data());\n  });\n}\nexport async function setData() {\n  const ipData = await fetch('https://geolocation-db.com/json/'); // 위치 정보 조회\n  const locationIP = await ipData.json(); // 위치 정보에서 IP 주소 load\n  const db = getFirestore();\n  const ipRef = doc(db, \"meme-awards\", locationIP);\n  const ipSnap = await getDoc(ipRef);\n  if (docSnap.exists()) {\n    console.log(\"Document data:\", docSnap.data());\n  } else {\n    console.log(\"No such document!\");\n  }\n  try {\n    const docRef = await addDoc(collection(db, \"meme-awards\"), {\n      IP: locationIP.IPv4\n    });\n    console.log(\"Document written with ID: \", docRef.id);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n}","map":{"version":3,"names":["collection","getFirestore","getDocs","addDoc","doc","getDoc","getData","db","querySnapShot","forEach","console","log","data","setData","ipData","fetch","locationIP","json","ipRef","ipSnap","docSnap","exists","docRef","IP","IPv4","id","e","error"],"sources":["C:/Users/p-d0175/Desktop/meme-awards/src/Api.js"],"sourcesContent":["import { collection, getFirestore, getDocs, addDoc, doc, getDoc } from \"firebase/firestore\";\r\n\r\nexport async function getData() {\r\n    const db = getFirestore();\r\n    const querySnapShot = await getDocs(collection(db, \"meme-awards\"));\r\n    querySnapShot.forEach((doc) => {\r\n        console.log(doc.data());\r\n    })\r\n}\r\n\r\nexport async function setData() {\r\n    const ipData = await fetch('https://geolocation-db.com/json/'); // 위치 정보 조회\r\n    const locationIP = await ipData.json(); // 위치 정보에서 IP 주소 load\r\n    const db = getFirestore();\r\n\r\n    const ipRef = doc(db, \"meme-awards\", locationIP);\r\n    const ipSnap = await getDoc(ipRef); \r\n\r\n    if (docSnap.exists()) {\r\n        console.log(\"Document data:\", docSnap.data());\r\n      } else {\r\n        console.log(\"No such document!\");\r\n    }\r\n\r\n    try {\r\n        const docRef = await addDoc(collection(db, \"meme-awards\"), {\r\n          IP : locationIP.IPv4,\r\n        });\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      } catch (e) {\r\n        console.error(\"Error adding document: \", e);\r\n      }\r\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,YAAY,EAAEC,OAAO,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAE3F,OAAO,eAAeC,OAAO,GAAG;EAC5B,MAAMC,EAAE,GAAGN,YAAY,EAAE;EACzB,MAAMO,aAAa,GAAG,MAAMN,OAAO,CAACF,UAAU,CAACO,EAAE,EAAE,aAAa,CAAC,CAAC;EAClEC,aAAa,CAACC,OAAO,CAAEL,GAAG,IAAK;IAC3BM,OAAO,CAACC,GAAG,CAACP,GAAG,CAACQ,IAAI,EAAE,CAAC;EAC3B,CAAC,CAAC;AACN;AAEA,OAAO,eAAeC,OAAO,GAAG;EAC5B,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;EAChE,MAAMC,UAAU,GAAG,MAAMF,MAAM,CAACG,IAAI,EAAE,CAAC,CAAC;EACxC,MAAMV,EAAE,GAAGN,YAAY,EAAE;EAEzB,MAAMiB,KAAK,GAAGd,GAAG,CAACG,EAAE,EAAE,aAAa,EAAES,UAAU,CAAC;EAChD,MAAMG,MAAM,GAAG,MAAMd,MAAM,CAACa,KAAK,CAAC;EAElC,IAAIE,OAAO,CAACC,MAAM,EAAE,EAAE;IAClBX,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAES,OAAO,CAACR,IAAI,EAAE,CAAC;EAC/C,CAAC,MAAM;IACLF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACpC;EAEA,IAAI;IACA,MAAMW,MAAM,GAAG,MAAMnB,MAAM,CAACH,UAAU,CAACO,EAAE,EAAE,aAAa,CAAC,EAAE;MACzDgB,EAAE,EAAGP,UAAU,CAACQ;IAClB,CAAC,CAAC;IACFd,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEW,MAAM,CAACG,EAAE,CAAC;EACtD,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVhB,OAAO,CAACiB,KAAK,CAAC,yBAAyB,EAAED,CAAC,CAAC;EAC7C;AACN"},"metadata":{},"sourceType":"module"}