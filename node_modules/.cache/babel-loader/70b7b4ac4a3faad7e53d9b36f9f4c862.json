{"ast":null,"code":"var _s = $RefreshSig$();\nimport { collection, getFirestore, getDocs, addDoc, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport { Cookies, useCookies } from \"react-cookie\";\nimport moment from \"moment/moment\";\nexport async function getData() {\n  const db = getFirestore();\n  const querySnapShot = await getDocs(collection(db, \"meme-awards\"));\n  querySnapShot.forEach(doc => {\n    console.log(doc.data());\n  });\n}\n\n// export async function setData() {\n//     const ipData = await fetch('https://geolocation-db.com/json/'); // 위치 정보 조회\n//     const locationIP = await ipData.json(); // 위치 정보에서 IP 주소 load\n//     const IP = locationIP.IPv4;\n//     const COOKIE_KEYS = 'isVoted';\n//     const [cookies, setCookies] = useCookies([COOKIE_KEYS]);\n\n//     // console.log(typeof(IP)); => string\n\n//     const db = getFirestore();\n//     const ipRef = doc(db, \"IP\", IP);\n//     const ipSnap = await getDoc(ipRef); \n\n//     if (ipSnap.exists()) {\n//         console.log(\"이미 있음!\");\n//       } else {\n//         console.log(ipRef);\n//         try {\n//             await setDoc(ipRef, {\n//                 IP : IP\n//             });\n//             console.log(\"Document written with ID: \", ipData.id);\n//           } catch (e) {\n//             console.error(\"Error adding document: \", e);\n//           }\n//     }\n// }\n\nexport async function setData() {\n  _s();\n  const COOKIE_KEYS = 'isVoted';\n  const [cookies, setCookies] = useCookies([COOKIE_KEYS]);\n  const expireDay = moment();\n  expireDay.add(1, 'd');\n}\n_s(setData, \"lryTrLk8K0tBiGIsX3uhCr3AS7k=\", false, function () {\n  return [useCookies];\n});","map":{"version":3,"names":["collection","getFirestore","getDocs","addDoc","doc","getDoc","setDoc","Cookies","useCookies","moment","getData","db","querySnapShot","forEach","console","log","data","setData","COOKIE_KEYS","cookies","setCookies","expireDay","add"],"sources":["C:/Users/p-d0175/Desktop/meme-awards/src/Api.js"],"sourcesContent":["import { collection, getFirestore, getDocs, addDoc, doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport { Cookies, useCookies } from \"react-cookie\";\r\nimport moment from \"moment/moment\";\r\n\r\nexport async function getData() {\r\n    const db = getFirestore();\r\n    const querySnapShot = await getDocs(collection(db, \"meme-awards\"));\r\n    querySnapShot.forEach((doc) => {\r\n        console.log(doc.data());\r\n    })\r\n}\r\n\r\n// export async function setData() {\r\n//     const ipData = await fetch('https://geolocation-db.com/json/'); // 위치 정보 조회\r\n//     const locationIP = await ipData.json(); // 위치 정보에서 IP 주소 load\r\n//     const IP = locationIP.IPv4;\r\n//     const COOKIE_KEYS = 'isVoted';\r\n//     const [cookies, setCookies] = useCookies([COOKIE_KEYS]);\r\n\r\n//     // console.log(typeof(IP)); => string\r\n\r\n//     const db = getFirestore();\r\n//     const ipRef = doc(db, \"IP\", IP);\r\n//     const ipSnap = await getDoc(ipRef); \r\n\r\n//     if (ipSnap.exists()) {\r\n//         console.log(\"이미 있음!\");\r\n//       } else {\r\n//         console.log(ipRef);\r\n//         try {\r\n//             await setDoc(ipRef, {\r\n//                 IP : IP\r\n//             });\r\n//             console.log(\"Document written with ID: \", ipData.id);\r\n//           } catch (e) {\r\n//             console.error(\"Error adding document: \", e);\r\n//           }\r\n//     }\r\n// }\r\n\r\nexport async function setData() {\r\n    const COOKIE_KEYS = 'isVoted';\r\n    const [cookies, setCookies] = useCookies([COOKIE_KEYS]);\r\n\r\n    const expireDay = moment();\r\n    expireDay.add(1, 'd');\r\n    \r\n}"],"mappings":";AAAA,SAASA,UAAU,EAAEC,YAAY,EAAEC,OAAO,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AACnG,SAASC,OAAO,EAAEC,UAAU,QAAQ,cAAc;AAClD,OAAOC,MAAM,MAAM,eAAe;AAElC,OAAO,eAAeC,OAAO,GAAG;EAC5B,MAAMC,EAAE,GAAGV,YAAY,EAAE;EACzB,MAAMW,aAAa,GAAG,MAAMV,OAAO,CAACF,UAAU,CAACW,EAAE,EAAE,aAAa,CAAC,CAAC;EAClEC,aAAa,CAACC,OAAO,CAAET,GAAG,IAAK;IAC3BU,OAAO,CAACC,GAAG,CAACX,GAAG,CAACY,IAAI,EAAE,CAAC;EAC3B,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,OAAO,GAAG;EAAA;EAC5B,MAAMC,WAAW,GAAG,SAAS;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,UAAU,CAAC,CAACU,WAAW,CAAC,CAAC;EAEvD,MAAMG,SAAS,GAAGZ,MAAM,EAAE;EAC1BY,SAAS,CAACC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;AAEzB;AAAC,GAPqBL,OAAO;EAAA,QAEKT,UAAU;AAAA"},"metadata":{},"sourceType":"module"}